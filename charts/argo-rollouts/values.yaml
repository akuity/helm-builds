controller:
  image:
    repository: quay.io/argoproj/argo-rollouts
    tag: ""     # default is the chart appVersion.
    pullPolicy: # IfNotPresent

  serviceAccount:
    # -- Create the service account. Set to false if service account created in another way
    create: true

  resources:
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 50m
  #    memory: 64Mi

  extraArgs:
  # - --aws-verify-target-group

  clusterRole:
    # -- readOnly will only grant cluster-level read privileges to the controller but not write. This allows write privileges to be managed separately to selective namespaces (e.g. using a different ClusterRole)
    readOnly: false

    # -- readSecrets set to false will remove the controllers privilege to read secrets across all namespaces. This may be desired if the controller does not need Secrets (e.g. namespace-level secrets for auth credentials, or analysis is not used).
    readSecrets: true

notifications:
  # -- Includes the notifications ConfigMap with predefined notification templates
  enabled: false
  # -- Creates the notification Secret. Disable this if you create the secret in another way (e.g. SealedSecret)
  createSecret: true

dashboard:
  # -- Enables the rollout dashboard
  enabled: false

  image:
    repository: quay.io/argoproj/kubectl-argo-rollouts
    tag: ""     # default is the chart appVersion.
    pullPolicy: # IfNotPresent

  resources:
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 50m
  #    memory: 64Mi

  ingress:
    # -- Enable creation of Ingress object
    enabled: false

    host: rollouts.example.com
    annotations: {}
    className: ""

    tls:
      enabled: false
      secretName: ""

  clusterRole:
    # -- readOnly will only grant cluster-level read privileges to the dashboard but not write
    readOnly: false
