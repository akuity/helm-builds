apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
spec:
  selector:
    matchLabels:
      app: argo-server
  template:
    metadata:
      labels:
        app: argo-server
    spec:
      containers:
      - args:
        - server
        {{- with .Values.server.extraArgs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if not .Values.server.secure }}
        - --secure=false
        {{- end }}
        image: {{ .Values.server.image.repository }}:{{ default .Values.global.image.tag .Values.server.image.tag }}
        name: argo-server
        ports:
        - containerPort: 2746
          name: web
        readinessProbe:
          httpGet:
            path: /
            port: 2746
            {{- if not .Values.server.secure }}
            scheme: HTTP
            {{- else }}
            scheme: HTTPS
            {{- end }}
          initialDelaySeconds: 10
          periodSeconds: 20
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        env:
        {{- with .Values.server.extraEnv }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.server.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo-server
      volumes:
      - emptyDir: {}
        name: tmp
