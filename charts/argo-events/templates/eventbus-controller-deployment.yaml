apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventbus-controller
spec:
  replicas: {{ .Values.eventbusController.replicas }}
  selector:
    matchLabels:
      app: eventbus-controller
  template:
    metadata:
      labels:
        app: eventbus-controller
    spec:
      containers:
      - args:
        - eventbus-controller
        {{- with .Values.eventbusController.extraArgs }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
        {{- with .Values.eventbusController.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
            - name: NAMESPACE
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.namespace
        image: {{ default .Values.global.image.repository .Values.eventbusController.image.repository }}:{{ default .Values.global.image.tag .Values.eventbusController.image.tag }}
        imagePullPolicy: {{ default .Values.global.image.pullPolicy .Values.eventbusController.image.pullPolicy }}
        livenessProbe:
            httpGet:
                path: /healthz
                port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
        name: eventbus-controller
        readinessProbe:
            httpGet:
                path: /readyz
                port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
        volumeMounts:
            - mountPath: /etc/argo-events
              name: controller-config-volume
      securityContext:
          runAsNonRoot: true
          runAsUser: 9731
      serviceAccountName: argo-events-sa
      volumes:
          - configMap:
                name: argo-events-controller-config
            name: controller-config-volume
